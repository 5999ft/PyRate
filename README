PyRate - a Rate Estimation tool for Python
------------------------------------------

This is a partial Python port of Pirate (Poly-Interferogram Rate And Time-Series Estimator), a MATLAB tool written by Hua Wang and others:
See http://homepages.see.leeds.ac.uk/~earhw/software/pi-rate/


TODO: NCI/GA contact details
----------------------------



TODO: description of what the software does
-------------------------------------------


Temporary installation instructions
-----------------------------------

* Clone the source code repository from NCI using Mercurial:
hg clone ssh://raijin.nci.org.au//g/data/dg9/repo/PyRate

It is probably worth installing virtualenv & virtualenvwrapper too

Dependencies:
* Two major dependencies are SciPy and GDAL. It may be easier to use your Linux package manager to install the system versions (unless virtualenv can install them).
* python-graph (easy_install python-graph-core)
* pyproj (pip install pyproj)
* Nosetests (pip install nose)
* Py.Test (pip install pytest)

NB: Having 2 test tools can be handy for debugging.


Basic Usage Instructions
------------------------

PyRate and associated tools are intended to be run TODO.

The main steps are:
1) Data formatting for PyRate
1a) TODO: configuration options? (edit the config file)
2) Transformations (multi-looking, resampling etc)
3) PyRate workflow


Data formatting:
The utility scripts gamma.py & roipac.py are provided to convert ROI_PAC and GAMMA data into a GeoTIFF format usable by PyRate.

For command line options/help:
python gamma.py -h
python roipac.py -h

GAMMA needs some a DEM header to extract metadata required for the formatting. A ROIPAC translation automatically looks for some header files, and may need a DEM header file for projection data.


Data transformations/multilooking:
This separate step is handled with prepifg.py.

For command line options/help:
python prepifg.py -h

The script requires the pyrate runtime configuration file. If a config file is not provided as an arg, the script will look for 'pyrate.cfg'.  


PyRate workflow:
This is the core of the processing tools, handled with pyrate.py.

For command line options/help:
python pyrate.py -h

This script also requires runtime config file. As with the previous step, if a config file is not provided as an arg, the script will look for 'pyrate.cfg' by default.




Licensing information
---------------------

TODO
